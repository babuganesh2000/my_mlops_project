# Monitoring works only with Unity Catalog tables.

common_permissions: &permissions
  permissions:
    - level: CAN_VIEW
      group_name: users

resources:
  quality_monitors:
    my_mlops_project_quality_monitor:
      table_name: ${var.catalog_name}.mlops_journey.predictions
      output_schema_name: ${var.catalog_name}.mlops_journey
      assets_dir: /Users/${workspace.current_user.userName}/databricks_lakehouse_monitoring
      inference_log:
        granularities: [1 day]
        model_id_col: model_version
        prediction_col: prediction
        label_col: fare_amount
        problem_type: PROBLEM_TYPE_REGRESSION
        timestamp_col: prediction_timestamp
      schedule:
        quartz_cron_expression: "0 0 8 * * ?"   # daily 08:00 UTC
        timezone_id: UTC

  jobs:
    retraining_job:
      name: ${bundle.target}-my_mlops_project-monitoring-retraining-job
      tasks:
        - task_key: monitored_metric_violation_check
          notebook_task:
            notebook_path: ../monitoring/notebooks/MonitoredMetricViolationCheck.py
            base_parameters:
              env: ${bundle.target}
              table_name_under_monitor: ${var.catalog_name}.mlops_journey.predictions
              metric_to_monitor: root_mean_squared_error
              metric_violation_threshold: 100
              num_evaluation_windows: 5
              num_violation_windows: 2
              git_source_info: "url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}"

        - task_key: is_metric_violated
          depends_on:
            - task_key: monitored_metric_violation_check
          condition_task:
            op: EQUAL_TO
            left: "{{tasks.monitored_metric_violation_check.values.is_metric_violated}}"
            right: "true"
          git_source_info: "url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}"

        - task_key: trigger_retraining
          depends_on:
            - task_key: is_metric_violated
              outcome: "true"
          run_job_task:
            job_id: ${resources.jobs.model_training_job.id}
            git_source_info: "url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}"

      schedule:
        quartz_cron_expression: "0 0 18 * * ?"  # daily 18:00 UTC
        timezone_id: UTC
      <<: *permissions
